Parameters:
  EnvName:
    Description: 'Environment where it has to be deployed'
    Type: String
  ImageTag:
    Description: 'Tag how the .zip file is tagged'
    Type: String
  ProjectName:
    Description: 'Name of the project'
    Type: String
  BucketES:
    Type: String
  BucketEN:
    Type: String

Resources:
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole

  CodePipelinePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "webapp-pipeline-policy-${EnvName}"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Resource:
              - "arn:aws:s3:::wallapop-trigger-link-cicd"
              - "arn:aws:s3:::wallapop-trigger-link-cicd/webapp/*"
            Effect: Allow
            Action:
              - s3:Get*
              - s3:List*

          - Resource:
              - !GetAtt ArtifactBucket.Arn
              - !Join [ '', [!GetAtt ArtifactBucket.Arn, '/*' ] ]
              - !Sub "arn:aws:s3:::wallapop-trigger-link-cicd/webapp/webapp-${ImageTag}.zip"
              - !Ref BucketES
              - !Ref BucketEN
            Effect: Allow
            Action:
              - s3:*

          - Resource:
              - !GetAtt CodePipelineServiceRole.Arn
              - !GetAtt CloudFormationExecutionRole.Arn
              - !GetAtt CodeBuildServiceRole.Arn
            Effect: Allow
            Action:
              - iam:*

          - Resource:
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/webapp-pipeline-${EnvName}*"
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Webapp-${EnvName}*"
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/webapp-s3-${EnvName}*"
            Effect: Allow
            Action:
              - cloudformation:*

          - Resource:
              - !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:webapp-${EnvName}*"
            Effect: Allow
            Action:
              - codepipeline:*

          - Resource:
              - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/webapp-invalidate-caches-${EnvName}*"
            Effect: Allow
            Action:
              - codebuild:*

          - Resource: "*"
            Effect: Allow
            Action:
              - iam:PassRole
              - iam:ListUserTags
              - iam:ListRoleTags
              - iam:TagUser
              - iam:TagRole
              - iam:UntagUser
              - iam:UntagRole
              - iam:CreateRole
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:PutRolePolicy
              - iam:GetRole
      Roles:
        - Ref: "CodePipelineServiceRole"

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole

  CloudFormationPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "webapp-cloudformation-policy-${EnvName}"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Resource: "*"
            Effect: Allow
            Action:
              - codebuild:CreateProject
              - codepipeline:List*
              - codepipeline:Get*
              - codepipeline:Create*
              - codepipeline:Tag*
              - s3:Get*
              - s3:List*
              - route53:Create*
              - route53:Get*
              - route53:List*
              - cloudfront:List*
              - cloudfront:Get*
              - cloudfront:CreateCloudFrontOriginAccessIdentity
              - iam:ListUserTags
              - iam:ListRoleTags
              - iam:TagUser
              - iam:TagRole
              - iam:UntagUser
              - iam:UntagRole
              - iam:UpdateAssumeRolePolicy
              - iam:DeleteRole
              - iam:CreateRole
              - iam:DeleteRolePolicy
              - iam:PutRolePolicy
              - iam:GetRole
              - iam:PassRole

          - Resource:
              - !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:webapp-${EnvName}*"
            Effect: Allow
            Action:
              - codepipeline:*

          - Resource:
              - !GetAtt ArtifactBucket.Arn
              - !Ref BucketES
              - !Ref BucketEN
            Effect: Allow
            Action:
              - s3:*

          - Resource: !Join
              - ''
              - - 'arn:aws:route53:::hostedzone/'
                - Fn::ImportValue: !Sub 'Core-${EnvName}-HostedZone'
            Effect: Allow
            Action:
              - route53:Get*
              - route53:List*
              - route53:Change*
              - route53:Update*

          - Resource:
              - !GetAtt CodePipelineServiceRole.Arn
              - !GetAtt CloudFormationExecutionRole.Arn
              - !GetAtt CodeBuildServiceRole.Arn
            Effect: Allow
            Action:
              - iam:*

          - Resource: !Join
              - ''
              - - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/'
                - Fn::ImportValue: !Sub webapp-es-cloudfront-distribution-id-${EnvName}
            Effect: Allow
            Action:
              - cloudfront:*
          - Resource: !Join
              - ''
              - - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/'
                - Fn::ImportValue: !Sub webapp-en-cloudfront-distribution-id-${EnvName}
            Effect: Allow
            Action:
              - cloudfront:*

          - Resource:
              - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/webapp-invalidate-caches-${EnvName}*"
            Effect: Allow
            Action:
              - codebuild:*

      Roles:
        - Ref: "CloudFormationExecutionRole"

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - Id: MoreThan90DaysOldItemsToGlacier
            Status: Enabled
            Transitions:
              - TransitionInDays: 90
                StorageClass: GLACIER
      Tags:
        - Key: Env
          Value: !Ref EnvName
        - Key: Project
          Value: !Ref ProjectName

  CodeBuildScripts:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "webapp-invalidate-caches-${EnvName}"
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
              build:
                  commands:
                    - aws cloudfront create-invalidation --distribution-id $EN_DISTRIBUTION --paths "/index.html"
                    - aws cloudfront create-invalidation --distribution-id $ES_DISTRIBUTION --paths "/index.html"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/docker:17.09.0"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: EN_DISTRIBUTION
            Value:
              Fn::ImportValue: !Sub webapp-en-cloudfront-distribution-id-${EnvName}
          - Name: ES_DISTRIBUTION
            Value:
              Fn::ImportValue: !Sub webapp-es-cloudfront-distribution-id-${EnvName}
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub "Core-${EnvName}-SSHSecurityGroup"
        VpcId:
          Fn::ImportValue:
            !Sub "Core-${EnvName}-VPC"
        Subnets:
          - Fn::ImportValue:
              !Sub "Core-${EnvName}-NatSubnet1"
      Tags:
        - Key: Env
          Value: !Ref EnvName
        - Key: Project
          Value: !Ref ProjectName

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "webapp-codebuild-role-${EnvName}"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !Join
                  - ''
                  - - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/'
                    - Fn::ImportValue: !Sub webapp-es-cloudfront-distribution-id-${EnvName}
                Effect: Allow
                Action:
                  - cloudfront:*
              - Resource: !Join
                  - ''
                  - - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/'
                    - Fn::ImportValue: !Sub webapp-en-cloudfront-distribution-id-${EnvName}
                Effect: Allow
                Action:
                  - cloudfront:*
              - Resource: "*"
                Effect: Allow
                Action:
                  - ec2:Describe*
                  - ec2:DeleteNetworkInterface
              - Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/webapp-invalidate-caches-${EnvName}:*"
                Effect: Allow
                Action:
                  - logs:*

  InvalidateCachesCodebuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/webapp-invalidate-caches-${EnvName}"
      RetentionInDays: 90

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub webapp-${EnvName}
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: webapp
              ActionTypeId:
                Category: Source
                Provider: S3
                Owner: AWS
                Version: "1"
              Configuration:
                S3Bucket: wallapop-trigger-link-cicd
                S3ObjectKey: !Sub webapp/webapp-${ImageTag}.zip
              OutputArtifacts:
                - Name: App

        - Name: Infrastructure
          Actions:
            - Name: Pipeline
              ActionTypeId:
                Category: Deploy
                Provider: CloudFormation
                Owner: AWS
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                StackName: !Sub webapp-pipeline-${EnvName}
                TemplateConfiguration: !Sub App::infrastructure/pipeline/${EnvName}.json
                TemplatePath: App::infrastructure/pipeline/template.yaml
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
              InputArtifacts:
                - Name: App
              RunOrder: 1
            - Name: Cloudfront
              ActionTypeId:
                Category: Deploy
                Provider: CloudFormation
                Owner: AWS
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                StackName: !Sub Webapp-${EnvName}
                TemplateConfiguration: !Sub App::infrastructure/cloudfront/${EnvName}.json
                TemplatePath: App::infrastructure/cloudfront/template.yaml
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
              InputArtifacts:
                - Name: App
              RunOrder: 2
            - Name: Invalidate-Caches
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildScripts
              InputArtifacts:
                - Name: App
              RunOrder: 3
