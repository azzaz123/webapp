Parameters:
  EnvName:
    Description: 'Environment where it has to be deployed'
    Type: String
  ProjectName:
    Description: 'Name of this project'
    Type: String
  BucketES:
    Description: 'Bucket where the ES webapp resides'
    Type: String
  BucketEN:
    Description: 'Bucket where the EN webapp resides'
    Type: String
  HostES:
    Description: 'URL to access to it'
    Type: String
  HostEN:
    Description: 'URL to access to it'
    Type: String
  HostedZoneName:
    Description: 'Name of the hosted zone'
    Type: String
  Certificate:
    Description: 'Acm Certificate'
    Type: String

Resources:
  WebEsDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref HostES
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/'
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          TargetOriginId: myS3Origin
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !Sub "${BucketES}.s3.amazonaws.com"
            Id: myS3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${BucketESCloudFrontOriginaccessIdentity}
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: 'sni-only'
          MinimumProtocolVersion: 'TLSv1.1_2016'
      Tags:
        - Key: Env
          Value: !Ref EnvName
        - Key: Project
          Value: !Ref ProjectName

  WebEnDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref HostEN
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/'
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          TargetOriginId: myS3Origin
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !Sub "${BucketEN}.s3.amazonaws.com"
            Id: myS3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${BucketENCloudFrontOriginaccessIdentity}
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: 'sni-only'
          MinimumProtocolVersion: 'TLSv1.1_2016'
      Tags:
        - Key: Env
          Value: !Ref EnvName
        - Key: Project
          Value: !Ref ProjectName

  BucketESCloudFrontOriginaccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Access identity for CloudFront'

  BucketESPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketES
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
              - s3:List*
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${BucketES}/*"
              - !Sub "arn:aws:s3:::${BucketES}"
            Principal:
              CanonicalUser: !GetAtt BucketESCloudFrontOriginaccessIdentity.S3CanonicalUserId

  BucketENPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketEN
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
              - s3:List*
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${BucketEN}/*"
              - !Sub "arn:aws:s3:::${BucketEN}"
            Principal:
              CanonicalUser: !GetAtt BucketENCloudFrontOriginaccessIdentity.S3CanonicalUserId

  BucketENCloudFrontOriginaccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Access identity for CloudFront'

  WebEsRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Ref HostedZoneName
      RecordSets:
        - AliasTarget:
            DNSName: !GetAtt WebEsDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2
          Name: !Ref HostES
          Type: A

  WebEnRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Ref HostedZoneName
      RecordSets:
        - AliasTarget:
            DNSName: !GetAtt WebEnDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2
          Name: !Ref HostEN
          Type: A

Outputs:
  WebappEsDistributionId:
    Description: Webapp CloudFront Distribution Id
    Value: !Ref WebEsDistribution
    Export:
      Name: !Sub webapp-es-cloudfront-distribution-id-${EnvName}

  WebappEnDistributionId:
    Description: Webapp CloudFront Distribution Id
    Value: !Ref WebEnDistribution
    Export:
      Name: !Sub webapp-en-cloudfront-distribution-id-${EnvName}
