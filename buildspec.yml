version: 0.2

phases:
  pre_build:
    commands:
      - $(aws ecr get-login --no-include-email --region eu-west-1)

  build:
    commands:
      # OBTAIN WORKING BRANCH
      - BRANCH=$(git branch --contains $CODEBUILD_SOURCE_VERSION | sed '1d')
      - echo $BRANCH

      # EXPORT TAG ENV FROM BRANCH
      - export ENV="dockx"
      - if [ "`echo $BRANCH | grep master`" != "" ]; then export ENV="prod"; fi
      - if [ "`echo $BRANCH | grep release/`" != "" ]; then export ENV="beta"; fi
      - if [ "`echo $BRANCH | grep hotfix/`" != "" ]; then export ENV="beta"; fi
      - echo $ENV

      # LOAD YARN DEPENDENCIES
      - docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:stable yarn

      # LAUNCH TEST
      - docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:stable yarn test --watch=false --no-progress --browsers=ChromeHeadless

      # INSTALL ENV
      - >
        if [ "`echo $ENV | grep prod`" != "" ]; then
          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:stable npm run buildprod
          aws s3 sync dist s3://web-es.wallapop.com --delete
          aws s3 cp dist/index.html s3://web-es.wallapop.com/index.html --cache-control max-age=0
          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:stable npm run buildprod-en
          aws s3 sync dist s3://web-en.wallapop.com --delete
          aws s3 cp dist/index.html s3://web-en.wallapop.com/index.html --cache-control max-age=0
          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:stable npm run builddocker
          docker build -f docker/Dockerfile -t 745640521341.dkr.ecr.eu-west-1.amazonaws.com/devel/webapp:stable .
          docker push "745640521341.dkr.ecr.eu-west-1.amazonaws.com/devel/webapp:stable"
        fi

      - >
        if [ "`echo $ENV | grep beta`" != "" ]; then
          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:stable npm run buildbeta
          aws s3 sync dist s3://web-es.beta.wallapop.com --delete
          aws s3 cp dist/index.html s3://web-es.beta.wallapop.com/index.html --cache-control max-age=0
          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:stable npm run buildbeta-en
          aws s3 sync dist s3://web-en.beta.wallapop.com --delete
          aws s3 cp dist/index.html s3://web-en.beta.wallapop.com/index.html --cache-control max-age=0
        fi

      - >
        if [ "`echo $ENV | grep dockx`" != "" ]; then
          TAG_BRANCH=feature-$(echo $BRANCH | cut -d '/' -f 2)
          echo $TAG_BRANCH
          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:stable npm run builddocker
          docker build -f docker/Dockerfile -t 745640521341.dkr.ecr.eu-west-1.amazonaws.com/devel/webapp:$TAG_BRANCH .
          docker push "745640521341.dkr.ecr.eu-west-1.amazonaws.com/devel/webapp:$TAG_BRANCH"
        fi

      - if [ "`echo $BRANCH | grep release/`" != "" ]; then VERSION=$(echo $BRANCH | cut -d '/' -f 2) ; curl -X POST "http://jenkins.wallapop.com:8080/job/PARAMETRIZED_TAG_AND_SEND_RELEASE_EMAIL/buildWithParameters?token=37a71f5b15ea00dcaf853153ec24ab0d&RELEASE_VERSION=$VERSION&JIRA_TAG_PREFIX=MOD&REPO=webapp&PLATFORM=jarvis"; fi

cache:
  paths:
    - /tmp/.cache/yarn/**/*
