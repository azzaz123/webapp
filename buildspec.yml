version: 0.2

phases:
  pre_build:
    commands:
      - $(aws ecr get-login --no-include-email --region eu-west-1)

  build:
    commands:
      # OBTAIN WORKING BRANCH
      - BRANCH=$(git branch --contains $CODEBUILD_SOURCE_VERSION | sed '1d')
#      - echo $BRANCH

      # EXPORT TAG ENV FROM BRANCH
      - export ENV="dockx"
      - if [ "`echo $BRANCH | grep master`" != "" ]; then export ENV="prod"; fi
      - if [ "`echo $BRANCH | grep release/`" != "" ]; then export ENV="beta"; fi
      - if [ "`echo $BRANCH | grep hotfix/`" != "" ]; then export ENV="beta"; fi

     # - echo $ENV
      - if [ $(echo $ENV) == "dockx" ]; then exit 1 ; fi

      # LOAD YARN DEPENDENCIES
#      - docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:ft-CLOUD-675 yarn

      # LAUNCH TEST
#      - docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:ft-CLOUD-675 yarn test --single-run --no-progress --browsers HeadlessChrome

      # INSTALL ENV

#      - >
#        if [ "$ENV" == "prod" ]; then
#          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:ft-CLOUD-675 npm run buildprod
#          aws s3 sync dist s3://web-es.wallapop.com --delete
#          aws s3 cp dist/index.html s3://web-es.wallapop.com/index.html --cache-control max-age=0
#          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:ft-CLOUD-675 npm run buildprod-en
#          aws s3 sync dist s3://web-en.wallapop.com --delete
#          aws s3 cp dist/index.html s3://web-en.wallapop.com/index.html --cache-control max-age=0
#          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:ft-CLOUD-675 npm run builddocker
#          docker build -f docker/Dockerfile -t 745640521341.dkr.ecr.eu-west-1.amazonaws.com/devel/webapp:stable .
#          docker push "745640521341.dkr.ecr.eu-west-1.amazonaws.com/devel/webapp:stable"
#        fi
#
#      - >
#        if [ "$ENV" == "beta" ]; then
#          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:ft-CLOUD-675 npm run buildbeta
#          aws s3 sync dist s3://web-es.beta.wallapop.com --delete
#          aws s3 cp dist/index.html s3://web-es.beta.wallapop.com/index.html --cache-control max-age=0
#          docker run -v ${PWD}:/root -w /root -v /tmp/.cache/yarn:/root/.cache/yarn --rm --name nodejs8 745640521341.dkr.ecr.eu-west-1.amazonaws.com/nodejs8:ft-CLOUD-675 npm run buildbeta-en
#          aws s3 sync dist s3://web-en.beta.wallapop.com --delete
#          aws s3 cp dist/index.html s3://web-en.beta.wallapop.com/index.html --cache-control max-age=0
#        fi

cache:
  paths:
    - /tmp/.cache/yarn/**/*
