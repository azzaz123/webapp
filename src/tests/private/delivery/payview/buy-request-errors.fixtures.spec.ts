import { MOCK_ERROR_RESPONSE } from '@api/fixtures/error-response-api.fixtures.spec';
import { BuyRequestErrorDto, BuyRequestErrorResponse } from '@api/delivery/buyer/requests/dtos/errors';
import { BUY_REQUEST_ERROR_CODES } from '@api/delivery/buyer/requests/mappers/errors/buy-request/buy-request-error-codes.enum';

const MOCK_BASE_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_ERROR_RESPONSE,
  error: [],
};

const MOCK_NO_ADDRESS_FOR_USER_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.NO_ADDRESS_FOR_USER,
  message: 'NO_ADDRESS_FOR_USER ♥',
};

export const MOCK_NO_ADDRESS_FOR_USER_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_NO_ADDRESS_FOR_USER_ERROR],
};

const MOCK_NO_CARRIER_OFFICE_ADDRESS_FOR_USER_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.NO_CARRIER_OFFICE_ADDRESS_FOR_USER,
  message: 'NO_CARRIER_OFFICE_ADDRESS_FOR_USER ♥',
};

export const MOCK_NO_CARRIER_OFFICE_ADDRESS_FOR_USER_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_NO_CARRIER_OFFICE_ADDRESS_FOR_USER_ERROR],
};

const MOCK_ALREADY_IN_PROGRESS_TRANSACTION_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.ALREADY_IN_PROGRESS_TRANSACTION,
  message: 'ALREADY_IN_PROGRESS_TRANSACTION ♥',
};

export const MOCK_ALREADY_IN_PROGRESS_TRANSACTION_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_ALREADY_IN_PROGRESS_TRANSACTION_ERROR],
};

const MOCK_DUPLICATED_REQUEST_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.DUPLICATED_REQUEST,
  message: 'DUPLICATED_REQUEST ♥',
};

export const MOCK_DUPLICATED_REQUEST_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_DUPLICATED_REQUEST_ERROR],
};

const MOCK_NON_PURCHASABLE_ITEM_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.NON_PURCHASABLE_ITEM,
  message: 'NON_PURCHASABLE_ITEM ♥',
};

export const MOCK_NON_PURCHASABLE_ITEM_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_NON_PURCHASABLE_ITEM_ERROR],
};

const MOCK_BLOCKED_SELLER_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.BLOCKED_SELLER,
  message: 'BLOCKED_SELLER ♥',
};

export const MOCK_BLOCKED_SELLER_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_BLOCKED_SELLER_ERROR],
};

const MOCK_BLOCKED_BUYER_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.BLOCKED_BUYER,
  message: 'BLOCKED_BUYER ♥',
};

export const MOCK_BLOCKED_BUYER_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_BLOCKED_BUYER_ERROR],
};

const MOCK_INVALID_CARD_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.INVALID_CARD,
  message: 'INVALID_CARD ♥',
};

export const MOCK_INVALID_CARD_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_INVALID_CARD_ERROR],
};

const MOCK_CURRENCY_NOT_ACCEPTED_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.CURRENCY_NOT_ACCEPTED,
  message: 'CURRENCY_NOT_ACCEPTED ♥',
};

export const MOCK_CURRENCY_NOT_ACCEPTED_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_CURRENCY_NOT_ACCEPTED_ERROR],
};

const MOCK_MAX_REQUEST_NUMBER_EXCEEDED_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.MAX_REQUEST_NUMBER_EXCEEDED,
  message: 'MAX_REQUEST_NUMBER_EXCEEDED ♥',
};

export const MOCK_MAX_REQUEST_NUMBER_EXCEEDED_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_MAX_REQUEST_NUMBER_EXCEEDED_ERROR],
};

const MOCK_ALREADY_USED_PROMOCODE_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.ALREADY_USED_PROMOCODE,
  message: 'ALREADY_USED_PROMOCODE ♥',
};

export const MOCK_ALREADY_USED_PROMOCODE_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_ALREADY_USED_PROMOCODE_ERROR],
};

const MOCK_EXPIRED_PROMOCODE_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.EXPIRED_PROMOCODE,
  message: 'EXPIRED_PROMOCODE ♥',
};

export const MOCK_EXPIRED_PROMOCODE_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_EXPIRED_PROMOCODE_ERROR],
};

const MOCK_ITEM_CATEGORY_DIFFERENT_TO_PROMOCODE_ITEM_CATEGORY_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.ITEM_CATEGORY_DIFFERENT_TO_PROMOCODE_ITEM_CATEGORY,
  message: 'ITEM_CATEGORY_DIFFERENT_TO_PROMOCODE_ITEM_CATEGORY ♥',
};

export const MOCK_ITEM_CATEGORY_DIFFERENT_TO_PROMOCODE_ITEM_CATEGORY_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_ITEM_CATEGORY_DIFFERENT_TO_PROMOCODE_ITEM_CATEGORY_ERROR],
};

const MOCK_ITEM_MAX_WEIGHT_GREATER_THAN_PROMOCODE_MAX_WEIGHT_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.ITEM_MAX_WEIGHT_GREATER_THAN_PROMOCODE_MAX_WEIGHT,
  message: 'ITEM_MAX_WEIGHT_GREATER_THAN_PROMOCODE_MAX_WEIGHT ♥',
};

export const MOCK_ITEM_MAX_WEIGHT_GREATER_THAN_PROMOCODE_MAX_WEIGHT_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_ITEM_MAX_WEIGHT_GREATER_THAN_PROMOCODE_MAX_WEIGHT_ERROR],
};

const MOCK_ITEM_PRICE_SMALLER_THAN_PROMOCODE_MIN_PRICE_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.ITEM_PRICE_SMALLER_THAN_PROMOCODE_MIN_PRICE,
  message: 'ITEM_PRICE_SMALLER_THAN_PROMOCODE_MIN_PRICE ♥',
};

export const MOCK_ITEM_PRICE_SMALLER_THAN_PROMOCODE_MIN_PRICE_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_ITEM_PRICE_SMALLER_THAN_PROMOCODE_MIN_PRICE_ERROR],
};

const MOCK_NOT_ACTIVE_YET_PROMOCODE_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.NOT_ACTIVE_YET_PROMOCODE,
  message: 'NOT_ACTIVE_YET_PROMOCODE ♥',
};

export const MOCK_NOT_ACTIVE_YET_PROMOCODE_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_NOT_ACTIVE_YET_PROMOCODE_ERROR],
};

const MOCK_NOT_EXISTING_PROMOCODE_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.NOT_EXISTING_PROMOCODE,
  message: 'NOT_EXISTING_PROMOCODE ♥',
};

export const MOCK_NOT_EXISTING_PROMOCODE_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_NOT_EXISTING_PROMOCODE_ERROR],
};

const MOCK_POSTAL_CODE_TEMPORARILY_RESTRICTED_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.POSTAL_CODE_TEMPORARILY_RESTRICTED,
  message: 'POSTAL_CODE_TEMPORARILY_RESTRICTED ♥',
};

export const MOCK_POSTAL_CODE_TEMPORARILY_RESTRICTED_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_POSTAL_CODE_TEMPORARILY_RESTRICTED_ERROR],
};

const MOCK_NOT_SHIPPABLE_ITEM_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.NOT_SHIPPABLE_ITEM,
  message: 'NOT_SHIPPABLE_ITEM ♥',
};

export const MOCK_NOT_SHIPPABLE_ITEM_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_NOT_SHIPPABLE_ITEM_ERROR],
};

const MOCK_INTERNATIONAL_SHIPPING_NOT_ENABLED_FOR_USER_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.INTERNATIONAL_SHIPPING_NOT_ENABLED_FOR_USER,
  message: 'INTERNATIONAL_SHIPPING_NOT_ENABLED_FOR_USER ♥',
};

export const MOCK_INTERNATIONAL_SHIPPING_NOT_ENABLED_FOR_USER_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_INTERNATIONAL_SHIPPING_NOT_ENABLED_FOR_USER_ERROR],
};

const MOCK_CARRIER_OFFICE_ADDRESS_AND_HOME_ADDRESS_COUNTRIES_DO_NOT_MATCH_ERROR: BuyRequestErrorDto = {
  error_code: BUY_REQUEST_ERROR_CODES.CARRIER_OFFICE_ADDRESS_AND_HOME_ADDRESS_COUNTRIES_DO_NOT_MATCH,
  message: 'CARRIER_OFFICE_ADDRESS_AND_HOME_ADDRESS_COUNTRIES_DO_NOT_MATCH ♥',
};

export const MOCK_CARRIER_OFFICE_ADDRESS_AND_HOME_ADDRESS_COUNTRIES_DO_NOT_MATCH_ERROR_RESPONSE: BuyRequestErrorResponse = {
  ...MOCK_BASE_ERROR_RESPONSE,
  error: [MOCK_CARRIER_OFFICE_ADDRESS_AND_HOME_ADDRESS_COUNTRIES_DO_NOT_MATCH_ERROR],
};
