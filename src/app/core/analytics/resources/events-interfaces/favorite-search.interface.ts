/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Users favorites a search
 */
export interface FavoriteSearch {
  /**
   * The unique identifier of the search
   */
  searchId?: string;
  /**
   * The unique identifier of the favorite search
   */
  savedSearchId: string;
  /**
   * The source from which the searching comes. The sources for the app clients can be: search_box, recent_searches, quick_filters, stored_filters, category_slider and default_filters. The sources for web can be: search_box, default_filters, quick_filters, seo_section, seo_list, seo_location_list, seo_sitemap
   */
  source?:
    | 'search_box'
    | 'recent_searches'
    | 'default_filters'
    | 'quick_filters'
    | 'stored_filters'
    | 'seo_section'
    | 'seo_list'
    | 'seo_location_list'
    | 'seo_sitemap';
  /**
   * Identifier of the screen where the searching has been done
   */
  screenId: 111 | 110 | 323;
  /**
   * Latitude of the performed search
   */
  latitude?: number;
  /**
   * Latitude of the performed search
   */
  longitude?: number;
  hasResults?: boolean;
  /**
   * Identifier of the category that has been filtered in the search
   */
  categoryId?: number;
  /**
   * Keywords applied in the search
   */
  keywords?: string;
  /**
   * Minimum price set as a filter in the search
   */
  minPrice?: number;
  /**
   * Maximum price set as a filter in the search
   */
  maxPrice?: number;
  /**
   * Distance in km set as a filter in the search
   */
  distance?: number;
  /**
   * Order criteria in which the results of the search are shown
   */
  orderBy?: 'distance' | 'price_low_to_high' | 'price_high_to_low' | 'newest' | 'most_relevant';
  timeFilter?: 'today' | 'lastWeek' | 'lastMonth';
  /**
   * List of the subcategory ids that have been filtered in the favorite search, separated by comma
   */
  objectTypeId?: string;
  /**
   * Item condition set as a filter in the search
   */
  itemCondition?: string;
  /**
   * Name of the experiment or A/B testing applied to the user who saved the search.
   */
  experiment?: string;
}
